{"version":3,"sources":["App.js","index.js"],"names":["Container","styled","div","ChatContainer","ContentContainer","ContentBox","MessageContainer","form","MessageBox","input","Button","button","App","props","componentDidMount","a","socket","socketIOClient","state","endpoint","on","msg","newMessages","messageFromServer","push","setState","console","log","handleChange","e","target","name","value","handleSubmit","preventDefault","emit","message","data","this","onSubmit","bind","type","onChange","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"22CAIA,IAAMA,EAAYC,IAAOC,IAAV,KAUTC,EAAgBF,IAAOC,IAAV,KAUbE,EAAmBH,IAAOC,IAAV,KAUhBG,EAAaJ,IAAOC,IAAV,KAKVI,EAAmBL,IAAOM,KAAV,KAShBC,EAAaP,IAAOQ,MAAV,KAOVC,EAAST,IAAOU,OAAV,KAsEGC,E,YA9Db,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAURC,kBAXmB,qBAWC,4BAAAC,EAAA,4DACZC,EAASC,IAAe,EAAKC,MAAMC,WAClCC,GAAG,UAAW,SAAAC,GACnB,IAAMC,EAAc,EAAKJ,MAAMK,kBAC/BD,EAAYE,KAAK,kBAACnB,EAAD,KAAagB,IAE9B,EAAKI,SAAS,CACZF,kBAAmBD,MAPL,SAUZ,EAAKG,SAAS,CAClBT,OAAQA,IAXQ,OAalBU,QAAQC,IAAI,EAAKT,MAAMF,QAbL,yCAXD,EA2BnBY,aAAe,SAAAC,GACb,EAAKJ,SAAL,eACGI,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SA7BX,EAiCnBC,aAjCmB,sCAiCJ,WAAMJ,GAAN,SAAAd,EAAA,4DACbc,EAAEK,iBADW,SAGP,EAAKhB,MAAMF,OAAOmB,KAAK,iBAAkB,EAAKjB,MAAMkB,SAH7C,OAIb,EAAKX,SAAS,CACZW,QAAS,KALE,yCAjCI,sDAEjB,EAAKlB,MAAQ,CACXmB,KAAM,KACNlB,SAAU,wBACViB,QAAS,GACTb,kBAAmB,GACnBP,OAAQ,MAPO,E,sEA2CjB,OACE,kBAAChB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KAAmBkC,KAAKpB,MAAMK,mBAC9B,kBAACjB,EAAD,CAAkBiC,SAAUD,KAAKL,aAAaO,KAAKF,OACjD,kBAAC9B,EAAD,CACEiC,KAAK,OACLV,KAAK,UACLC,MAAOM,KAAKpB,MAAMkB,QAClBM,SAAUJ,KAAKV,aAAaY,KAAKF,QAEnC,kBAAC5B,EAAD,CAAQiC,QAASL,KAAKV,aAAaY,KAAKF,OAAxC,uB,GAvDMM,IAAMC,WC1DxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5a876345.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport socketIOClient from \"socket.io-client\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n\n  border: 1px solid black;\n`;\n\nconst ChatContainer = styled.div`\n  width: 50%;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid black;\n`;\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  height: 90%;\n\n  display: flex;\n  flex-direction: column;\n\n  border: 1px solid black;\n`;\n\nconst ContentBox = styled.div`\n  background-color: lightgrey;\n  padding: 10px;\n`;\n\nconst MessageContainer = styled.form`\n  width: 100%;\n  height: 10%;\n\n  display: flex;\n\n  border: 1px solid black;\n`;\n\nconst MessageBox = styled.input`\n  width: 90%;\n  height: 100%;\n\n  border: 1px solid black;\n`;\n\nconst Button = styled.button`\n  width: 10%;\n  height: 100%;\n\n  border: 1px solid black;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      endpoint: \"http://localhost:4000\",\n      message: \"\",\n      messageFromServer: [],\n      socket: null\n    };\n  }\n\n  componentDidMount = async () => {\n    const socket = socketIOClient(this.state.endpoint);\n    socket.on(\"message\", msg => {\n      const newMessages = this.state.messageFromServer;\n      newMessages.push(<ContentBox>{msg}</ContentBox>);\n\n      this.setState({\n        messageFromServer: newMessages\n      });\n    });\n    await this.setState({\n      socket: socket\n    });\n    console.log(this.state.socket);\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    await this.state.socket.emit(\"submit message\", this.state.message);\n    this.setState({\n      message: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <ChatContainer>\n          <ContentContainer>{this.state.messageFromServer}</ContentContainer>\n          <MessageContainer onSubmit={this.handleSubmit.bind(this)}>\n            <MessageBox\n              type=\"text\"\n              name=\"message\"\n              value={this.state.message}\n              onChange={this.handleChange.bind(this)}\n            />\n            <Button onClick={this.handleChange.bind(this)}>전송</Button>\n          </MessageContainer>\n        </ChatContainer>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}